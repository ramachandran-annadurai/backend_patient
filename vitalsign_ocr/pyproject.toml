[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "medication-ocr-api"
dynamic = ["version"]
description = "A comprehensive OCR API for processing medication-related documents"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LogicalMinds", email = "info@logicalminds.com"}
]
maintainers = [
    {name = "LogicalMinds", email = "info@logicalminds.com"}
]
keywords = ["ocr", "medication", "prescription", "medical", "document", "text-extraction", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.3",
    "aiohttp>=3.9.1",
    "PyMuPDF>=1.20.2",
    "PyPDF2>=3.0.1",
    "python-docx>=0.8.11",
    "paddleocr>=2.7.0.3",
    "opencv-python>=4.8.0",
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

[project.urls]
Homepage = "https://github.com/logicalminds/medication-ocr-api"
Documentation = "https://medication-ocr-api.readthedocs.io/"
Repository = "https://github.com/logicalminds/medication-ocr-api"
"Bug Tracker" = "https://github.com/logicalminds/medication-ocr-api/issues"

[project.scripts]
medication-ocr-api = "medication.app.main:main"

[tool.setuptools]
packages = ["medication", "medication.app", "medication.app.api", "medication.app.models", "medication.app.services"]

[tool.setuptools.package-data]
medication = ["webhook_configs.json", "*.md", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["medication"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]
